DATE:28.02.2024
=============================================
FULL STACK DEVELOPMENT IN JAVA

MAVEN
=========================================================
MAVEN IS BUILD TOOL
MAVEN IS TO AUTOMATE THE BUILDING PROCESS
MEANING BUILDING PROCESS
=========================================
1.DOWNLOAD THE JAR FILES FORM INTERNET
2.COMPILE THE SOURCE CODE
3.EXECUTE TESTING
4.PACKAING TO JAR/WAR FILE
PURPOSE
=======================
MAVEN IS SIMPLYFY TO AUTOMATE BUILDING PROCESS

SET UP
=============================
TWO WAYS
=======================
1.USING COMMAND PROMPT
2.BY USING IDE
EX:ECLIPSE,STS,INTELLIJ

MAVEN TERMINOLOGY
=============================
ARCHETYPE:TYPE OF PROJECT ==QUICK START/WEB
GROUPID===INDUSTRY TYPES EX:COM.AEC
ARTIFACTID:NAME OF THE PROJECT
VERSION:SNAPSHOT=====UNDER DEVELOPING
        RELEASE=======COMPLETED
DEPENDENCY====JAR FILES
REPOSITORY===LOCALTION WHERE JAR FILES STORES
THREE TYPES
==========================
1.CENTRAL====IN THE INTERNET  MAVEN SERVER
2.LOCAL=======YOUR HDD
3.REMOTE====PRIVATE TO THE COMPANY

POM.XML
==================
PROJECT OBJECT MODEL
IT IS HEART OF THE MAVEN
PROJECT CONFIGURATION
DEPENDENCY MANAGEMENT
PLUGINS 
===========================================
GOALS
=============================================
clean
compile
test
package

C:\Users\arins\.m2\repository====LOCAL REPOSITORY LOCATION
TRANSITIVE DEPENDENCY
=======================================================================================
SPRING
=======================================================================================
DESKTOP APPLICATION====CORE JAVA,AWT,SWING,SPRING                ===JAR FILES
WEB APPLICATION=======SERVLET,JSP,HTML,CSS,JAVASCRIPT,SPRING      ====WAR FILES
ENTERPRISE APPLICATION===EJB,SPRING                               =====EAR FILES(JAR+WAR)

DEFINATION
============================================
SPRING IS OPEN SOURCE LIGHT WEIGHT DEPENDENCY INJECTNION BASED FREAMEWORK SOFTWARE TO DEVELOP JAVA/JEE BASED ENTERPRISE
APPLICATION

HEAVY WEIGHT
=================================================
.java===compile===.class =====container===.java===.class===o/p
LIGHT WEIGHT
============================================================
.java===compile===.class===container====.class===o/p

FEATURES
=======================
POJO CLASS
POJO
==========================
PLAIN OLD JAVA OBJECT
GETTER 
SETTER
CONSTRUCTOR

XML
ANNOTATION


===============================================================

FRAMEWORK
====================================================
TECHNOLOGIES+DESIGN PATTERN
DATABASE ===JDBC API
MESSAGING===JMS
MAILING===JAVA MAIL
DESIGN PATTERN
=========================
WELL APPROVED SOLUTION
EX:MVC,SINGLETON,FACTORY ,SAGA
OBJECTIVE OF FRAMEWORK
=============================
RAD===RAPID APPLICATION DEVELOPMENT
DEVELOPER ABLE TO DO FASTER DEVELOPMENT USING FRAMEWORK BECAUSE THERE IS PREDEFINED CLASS METHODS INTERFACES
ARE TRHERE ALONG WITH DESIGN PATTERN

SPRING BEAN
=========================
CLASS+RULES GIVEN BY SPRING
DEPENDENCY
==================================================
INSTANCE VARIABLE
=======================
DECLARED AT THE CLASS LEVEL
EX:
class Test
{
  private String eid;==============   INSTANCE VARIABLE
private String ename;==============
}
TYPES OF DEPENDENCY IN  SPRING
==================================================================
1.PRIMITIVE TYPES:INT,DOUBLE,FLOAT,LONG
2.COLLECTION TYPES:LIST,SET,MAP,PROPERTIES
3.REFERENCE TYPE

DEPENDENCY INJECTION
==============================================
PROVIDE/UPDATE DATA INTO DEPENDENCY CALLED DEPENDENCY INJECTION

FEATURES OF SPRING
===============================
1.IT IS USED FOR DISTRIBUTED/WEB APPLICATION
2.IT IS A CONTAINER SYSTEM
CONTAINER SYSTEM
==========================================
1.FISRT SCAN THE CLASS
2.CREATE THE OBJECT
3.ASSING DATA
4.LINKING THE OBJECT
5.DETROY THE OBJECT

TYPES OF DEPENDENCY INJECTION
===================================
1.SETTER INJECTION
2.CONSTRUCTOR INJECTION
3.INTERFACE INJECTION
4.LOOK UP METHOD INJECTION
TWO TYPES OF CONTAINER IN SPRING
==================================
1.BEANFACTORY==SUPPORT ONLY XML
2.APPLICATIONCONTEXT====SUPPORT XML,CLASS,ANNOTATION
APPLICATION CONTEXT IS CALLED IOC(INVERSION CONTROL)
SPRING MODULES
=================================================
1.SPRING CORE
2.SPRING JDBC
3.SPRING CONTEXT
4.SPRING AOP
5.SPRING ORM
6.SPRING WEB=========   SPRING WEB MVC
7.SPRING MVC=========

SPRING CORE
=================================================
RULES GIVEN SPRING TO DEVELOP SPRING APPLICATION
1.CLASS SHOULD BE PUBLIC
2,INSTANCE VARIABLE IS PRIVATE
3.USE DEFAULT CONSTRUCTOR
4.USE PARAMETERISED CONSTRUCTOR
5.USE GETTTER SETTER METHODS
6.USE toString(),hashcode() and equals()
7.USE ANNOTATION
TYPES OF ANNOTATION
======================================
TWO TYPES OF ANNOTATION
===================================
1.STEREOTYPE ANNOTATION
===========================================
RELATED TO OBJECT
@component
@service
@repository
@controller
@RestController
2.BASIC ANNOTATION
@componentScan
@propertySource
@Autowire
@primary
@qualifier
=====================================================

@Data===GETTER AND SETTER
@Component
@ComponentScan
@value
@NoArgsConstructor
@AllArgsConstructor

PRACTICAL LINK
=====================================================
https://github.com/arindamslt/AECTRAININGPRACTICAL.git
TRAINING MATERIALS LINK
====================================================
https://github.com/arindamslt/AECTRAINING.git
==================================================================
DATE:29.02.2024
=====================================================================
HIBERNATE
====================================================================================
HIBERNATE IS A FRAMEWORK.
IT IS WORKED ON DATA LAYER
CREATE TABLE TABLE1
(ED VARCHAR(10));
STEP 1
==========================
CREATE A DATABSE IN MYSQL
STEP2
=============================
CREATE MAVEN PROJECT 
DEPENDENCY ADDED
=======================
HIBERNATE
LOMBOK
MYSQL
STEP3
========================================
ADD RESOUCCES FOLDER IN SRC/MAIN
RIGHT CLICK ON PROJECT===GO TO PROTERTIES ===JAVA BUILD PATH====ADD CHECK BOX OF JRE
STEP 4
================================================
ADD META-INF FROM GITHUB PLACED INTO SRC/MAIN/RESOURCES FOLDER
CLASS==EMPLOYEE TABLENAME===EMPLOYEE_MASTER
===============
EID===AUTOGERATED    
ENAME===NOT NULL====25
ESDESIG===25
JOINDT====TODAY'S DATE
WORKHR ===TODAY'S DATE AND TIME
EMAIL======30
SAL
==================================================================================================

ANNOTATION
================================
@Entity==== TABLE CREATION WITH NAME OF CLASS NAME
@Table=====CREATE THE TABLE ACCRDING TO PROGRAMMER NAME
@Id========PRIMARY KEY
@Column=====CHANGE THE COLUMN STRUCTURE
@GeneratedValue====Auto Generated Column value
@Temporal====For Using Date And Time Both
CRUD OPERATION
================================================================================
INSERT UPDATE DELETE FETCH 

PRODUCT
========================
PID
PNAME
PQTY
PRICE
FETCHING DATA FROM A DATABASE CAN BE DONE BY
===============================================
1.JPQL===JAVA PERSISTENCE QUERY LANGUAGE
2.HQL====HIBERNATE QUERY LANGUAGE
3.NATIVE SQL====NORMAL SQL
SELECT * FROM PRODUCT;
SELECT P FROM Product p;
from Product;

TYPES OF MAPPING
=======================
ONE TO ONE
ONE TO MANY
MANY TO ONE
MANY TO MANY
========================================================
DATE:01.03.2024
=======================================================
LIMITATION OF SPRING
=============================================
1.WE NEED SET OF LIBRARIES WITH COMPTABLE VERSION
2.WE HAVE TO CONFIGURE LOT OF THINGS
3.WE NEED TO DEPLOY THE APPLICATION EXTERNAL SERVER
EX:TOMCAT,JBOSS
SPRING BOOT  IS AN ARCHITECTURAL STYLE WHICH IS DEVELOPED TOP OF THE SPRING
ADVANTAGE OF SPRING BOOT
===================================
1.STARTER DEPENDENCY
2.AUTO CONFIGURATION
3.EMBEDDED SERVER
STARTER DEPENDENCY
==================================================
AGGREGATES RELATED JAR FILES OF DIFFRENT MODULE GROUP TOGETHER INTO SINGLE UNIT
SPRING-BOOT-STARTER-DEPENDENCY
AUTOCONFIGURATION
==============================
HERE LOT THINGS ARE AUTOCONFIGRED
by default autoconfiguration is disabled

@EnableAutoConfiguration=====================
@CompontScan(basePackages =" ")                   @SpringBootApplication
@Configuration=================================
EMBEDDED SERVER
=============================================

HOW TO CREATE SPRING BOOT APPLICATION
====================================
1.SPRING INITIALIZER
2.STS====SPRING STARTER PROJECT



my.app.driver=oracle.jdbc.driver
my.app.url=jdbc:oracle
my.app.uname=scott
my.app.pass=tiger
YML IS BETER THAN APPLICATION.PROPERTIES
======================================
INDEX DUPLICATION IS NOT THERE
IT IS MORE READABLE

COMMUNICATION TO DATABASE WITH SPRING BOOT JDBC
====================================================
CREATE TABLE ACCOUNT
     (ACCNO VARCHAR(10) PRIMARY KEY,
      CNAME VARCHAR(25),
      BALANCE DECIMAL);

=============================================================

CREATE SPRING STARTER PROJECT
===============================
DEPENDENCY
======================
LOMBOK
MYSQL
JDBCAPI


JdbcTemplate
update()===insert,update,delete

ENTERPRISE APPLICATION
===================================
SPRING+HIBERNATE USING SPRING BOOT
==========================================
SPRING DATA JPA
========================================
SUPPLIED INTERFACE
==============================
CrudRepository<T,ID>
T===TableName
ID===Primary Key Data Type
JpaRepository<T,ID>
jpaRepository extends CrudRepository
==================================
save(Entity)
delete(Entity)
save(Entity)
findAll()
findById(ID)
findByEname(ename)
DOMAIN SPECIFIC LANGUAGE

BootDataJPa
====================================
DEPENDENCY
==================================
LOMBOK
SPRING DATA JPA
MYSQL

DATE:02.03.2024
======================================================================================
REST FUL WEBSERVICES
============================================================================
WEBSERVICE
=======================================================================
WEBSERVICE IS RESPONSIBLE TO COMMUNICATE INTEROPERARBLE APPLICATION
TYPES OF WEBSERVICES
===========================================================
THERE ARE TWO TYPES OF WEBSERVICES
1.SOAP====SIMPLE OBJECT ACCESS PROTOCOL
ONLY ONE FORMAT IS SUPPORTED HERE I.E. XML
2.REST====REPRESENTATIONAL STATE TRANSFER
HERE SUPPORTED BOTH XM AND JSON

ACTION BASED URL
==================================
http:///www.abc.com/?id=1===query parameter
RESOURCE BASED URL
http://abc.com/1  ====path parameter

HTTP METHODS
=================================================
GET===GETTING THE DATA FROM SERVER
POST====POSTING DATA TO THE SERVER
PUT=====UPDATE DATA TO THE SERVER
DELETE===DELETE DATA INTO SERVER
=====================================================
HTTP ERROR
==================================
500===INTERNAL SERVER ERROR
404====NOT FOUND

200====OK
============================================================
JSON
==============================
JAVA SCRIPT OBJECT NOTATION
=====================================
{
    "CID":"C1",
    "CNAME":"ANUP",
     "CPHNO":757575


}
BOOTRESTAPI
=======================================
DEPENDENCY ADDED
===================================================
1.LOMBOK
2.SPRING DATA JPA
3.MYSQL
4.SPRING WEB
5.SPRING DEV TOOLS

ORDER_DTLS
=========================
orderid ====AUTOGENERATED
oqty======INTEGER
orderdt====ACCEPT TODAY'S DATE
oitem===String
price  ===Double
http://localhost:1004/order/add
{
  "iqty":1,
  "oitem":"PIZZA",
  "price":300.00

   
}

http://localhost:1004/order/fetch

http://localhost:1004/order/fetch/1=====pathvaribale

http://localhost:1004/order/del/1=====controller====service====repository====model===database
@PutMapping
http://localhost:1004/order/upd/2
REST API CRUD OPERATION
INSERT UPDATE DELETE FETCH FETCH THE DATA BY ID

DATE:04.03.2024
==========================================================================================================

DOM
==============================
DOCUMENT OBJECT MODEL
THE ELEMENTS OF HTML ARE CONVERTED INTO OBJECTS ARE CALLED NODE .THEY WILL ARRANGE IN A TREE LIKE STRUCTURE 
CALLED DOM

HTML PARSE INTO BYTES====TOKEN====OBJECT

WE CAN ACCESS HTML ELEMENTS BY MEANS
ID VALUE
CLASS VALUE
TAG
DOM MANIPULATION CAN BE BY USING JAVASCRIPT
NODE JS
VISUAL STUDIO CODE

JAVASCRIPT CAN DEVELOP THE UI PART

CREATING REACT APP
=========================================================
npx create-react-app appdemo
AXIOS LIBRARY
==============================================================
npm install axios
ROUTING
===================================================
npm install react-router-dom
BOOTSTRAP
=================================================
npm install bootstarp
THEN GO TO App.js and add
==================================================
import "bootstrap/dist/css/bootstrap.css";
=================================================
JSX
=====================================================
JSX PROVIDE ALMOST 99% SIMNILAR TO HTML DESIGN 

JSX====BABEL COMPILER==REACT ELEMENT====REACT DOM ====RENDER()===DOM====BROWSER ENGINE

JAVASCRIPT                          VS                      REACT
========================================================================================================
onClick="ui()"                                         onClick={ui}
style=bgcolor:red;                                     <div style="{{textAlign:"center",marginTop:"50px" }}"
==========================================================================================================
REACT JS APPLICATION USING CRA TOOL
=========================================================================================
npm create-raeact-app   appname====install create react app in your machine
npx create-react-app   appname===




FUNCTIONAL COMPONENT
IN LINE CSS IN REACT
EXTERNAL CSS IN REACT

REACT HOOK
==========================================
REACT HOOK IS A SPECIAL FUNCTION USED FOR SPECIAL PURPOSE
useState()
useState()
let[state,setState]=useState({ data{ 
title:"",
subtitile:""
}
} )
setState({
 data.title="",
 data.subtitle=""
})
<h2>{data.title}</h2>
<h3>{data.subtitile}</h3>

DATE:05.03.2024
==========================================================================================
ES6
============================
1.CONST,LET
2.SPREAD OPERATOR
3.REST PARAMATER
4.DESTRUCTURING OF OBJECT
5.MAP FUNCTION IN ARRAY
6.PROMISE
CONST VS LET  VS VAR
===================================================================================
SPREAD OPERATOR
================================
COPIES THE VALUES OF ONE OBJECT INTO ANOTHER
...
REST PARAMETER
=============================
(...)
DESTRCTING THE OBJECT
========================================
UNPACK DATA FROM LIST OF OBJECT VALUES












































